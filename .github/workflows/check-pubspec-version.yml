name: 'Check Pubspec Version'
description: 'Verifica se a vers√£o no pubspec.yaml foi aumentada'

on:
  workflow_call:
    inputs:
      comparison_type:
        description: 'Tipo de compara√ß√£o: "pr" (compara com main) ou "commit" (compara com commit anterior)'
        required: true
        type: string
      pubspec_path:
        description: 'Caminho para o arquivo pubspec.yaml'
        required: false
        type: string
        default: 'pubspec.yaml'

outputs:
  current_version:
    description: 'Vers√£o atual do pubspec.yaml'
    value: ${{ steps.get-versions.outputs.current_version }}
  previous_version:
    description: 'Vers√£o anterior (main ou commit anterior)'
    value: ${{ steps.get-versions.outputs.previous_version }}

runs:
  using: 'composite'
  steps:
    - name: Get versions and compare
      id: get-versions
      shell: bash
      run: |
        # Fun√ß√£o para extrair vers√£o do pubspec.yaml
        extract_version() {
          grep '^version:' "$1" | sed 's/version: //' | tr -d ' '
        }
        
        # Obt√©m vers√£o atual
        CURRENT_VERSION=$(extract_version ${{ inputs.pubspec_path }})
        echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        
        # Obt√©m vers√£o anterior baseada no tipo de compara√ß√£o
        if [ "${{ inputs.comparison_type }}" = "pr" ]; then
          # Para PR: compara com a vers√£o na branch main
          git fetch origin main:main
          PREVIOUS_VERSION=$(git show main:${{ inputs.pubspec_path }} | extract_version /dev/stdin)
          COMPARISON_TEXT="branch main"
        elif [ "${{ inputs.comparison_type }}" = "commit" ]; then
          # Para push: compara com o commit anterior
          git fetch --unshallow || git fetch --depth=2
          PREVIOUS_VERSION=$(git show HEAD~1:${{ inputs.pubspec_path }} | extract_version /dev/stdin)
          COMPARISON_TEXT="commit anterior"
        else
          echo "‚ùå Tipo de compara√ß√£o inv√°lido: ${{ inputs.comparison_type }}"
          exit 1
        fi
        
        echo "previous_version=$PREVIOUS_VERSION" >> $GITHUB_OUTPUT
        
        # Exibe as vers√µes
        echo "üìã Vers√£o atual: $CURRENT_VERSION"
        echo "üìã Vers√£o $COMPARISON_TEXT: $PREVIOUS_VERSION"
        
        # Verifica se a vers√£o foi aumentada
        if [ "$CURRENT_VERSION" = "$PREVIOUS_VERSION" ]; then
          echo "‚ùå Vers√£o n√£o foi aumentada em rela√ß√£o ao $COMPARISON_TEXT"
          echo "   Vers√£o atual: $CURRENT_VERSION"
          echo "   Vers√£o $COMPARISON_TEXT: $PREVIOUS_VERSION"
          exit 1
        else
          echo "‚úÖ Vers√£o aumentada de $PREVIOUS_VERSION para $CURRENT_VERSION"
        fi
